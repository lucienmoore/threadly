{
  "version": 3,
  "sources": ["../../@uppy/xhr-upload/node_modules/nanoid/non-secure/index.js", "../../@uppy/utils/lib/EventManager.js", "../../@uppy/utils/lib/ProgressTimeout.js", "../../@uppy/utils/lib/RateLimitedQueue.js", "../../@uppy/utils/lib/NetworkError.js", "../../@uppy/utils/lib/isNetworkError.js", "../../@uppy/utils/lib/fileFilters.js", "../../@uppy/xhr-upload/lib/locale.js", "../../@uppy/xhr-upload/lib/index.js"],
  "sourcesContent": ["let urlAlphabet =\n  'useandom-26T198340PX75pxJACKVERYMINDBUSHWOLF_GQZbfghjklqvwyzrict'\nexport let customAlphabet = (alphabet, defaultSize = 21) => {\n  return (size = defaultSize) => {\n    let id = ''\n    let i = size\n    while (i--) {\n      id += alphabet[(Math.random() * alphabet.length) | 0]\n    }\n    return id\n  }\n}\nexport let nanoid = (size = 21) => {\n  let id = ''\n  let i = size\n  while (i--) {\n    id += urlAlphabet[(Math.random() * 64) | 0]\n  }\n  return id\n}\n", "function _classPrivateFieldLooseBase(receiver, privateKey) { if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) { throw new TypeError(\"attempted to use private field on non-instance\"); } return receiver; }\nvar id = 0;\nfunction _classPrivateFieldLooseKey(name) { return \"__private_\" + id++ + \"_\" + name; }\nvar _uppy = /*#__PURE__*/_classPrivateFieldLooseKey(\"uppy\");\nvar _events = /*#__PURE__*/_classPrivateFieldLooseKey(\"events\");\n/**\n * Create a wrapper around an event emitter with a `remove` method to remove\n * all events that were added using the wrapped emitter.\n */\nexport default class EventManager {\n  constructor(uppy) {\n    Object.defineProperty(this, _uppy, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _events, {\n      writable: true,\n      value: []\n    });\n    _classPrivateFieldLooseBase(this, _uppy)[_uppy] = uppy;\n  }\n  on(event, fn) {\n    _classPrivateFieldLooseBase(this, _events)[_events].push([event, fn]);\n    return _classPrivateFieldLooseBase(this, _uppy)[_uppy].on(event, fn);\n  }\n  remove() {\n    for (const [event, fn] of _classPrivateFieldLooseBase(this, _events)[_events].splice(0)) {\n      _classPrivateFieldLooseBase(this, _uppy)[_uppy].off(event, fn);\n    }\n  }\n  onFilePause(fileID, cb) {\n    this.on('upload-pause', (targetFileID, isPaused) => {\n      if (fileID === targetFileID) {\n        cb(isPaused);\n      }\n    });\n  }\n  onFileRemove(fileID, cb) {\n    this.on('file-removed', file => {\n      if (fileID === file.id) cb(file.id);\n    });\n  }\n  onPause(fileID, cb) {\n    this.on('upload-pause', (targetFileID, isPaused) => {\n      if (fileID === targetFileID) {\n        // const isPaused = this.#uppy.pauseResume(fileID)\n        cb(isPaused);\n      }\n    });\n  }\n  onRetry(fileID, cb) {\n    this.on('upload-retry', targetFileID => {\n      if (fileID === targetFileID) {\n        cb();\n      }\n    });\n  }\n  onRetryAll(fileID, cb) {\n    this.on('retry-all', () => {\n      if (!_classPrivateFieldLooseBase(this, _uppy)[_uppy].getFile(fileID)) return;\n      cb();\n    });\n  }\n  onPauseAll(fileID, cb) {\n    this.on('pause-all', () => {\n      if (!_classPrivateFieldLooseBase(this, _uppy)[_uppy].getFile(fileID)) return;\n      cb();\n    });\n  }\n  onCancelAll(fileID, eventHandler) {\n    var _this = this;\n    this.on('cancel-all', function () {\n      if (!_classPrivateFieldLooseBase(_this, _uppy)[_uppy].getFile(fileID)) return;\n      eventHandler(...arguments);\n    });\n  }\n  onResumeAll(fileID, cb) {\n    this.on('resume-all', () => {\n      if (!_classPrivateFieldLooseBase(this, _uppy)[_uppy].getFile(fileID)) return;\n      cb();\n    });\n  }\n}", "function _classPrivateFieldLooseBase(receiver, privateKey) { if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) { throw new TypeError(\"attempted to use private field on non-instance\"); } return receiver; }\nvar id = 0;\nfunction _classPrivateFieldLooseKey(name) { return \"__private_\" + id++ + \"_\" + name; }\nvar _aliveTimer = /*#__PURE__*/_classPrivateFieldLooseKey(\"aliveTimer\");\nvar _isDone = /*#__PURE__*/_classPrivateFieldLooseKey(\"isDone\");\nvar _onTimedOut = /*#__PURE__*/_classPrivateFieldLooseKey(\"onTimedOut\");\nvar _timeout = /*#__PURE__*/_classPrivateFieldLooseKey(\"timeout\");\n/**\n * Helper to abort upload requests if there has not been any progress for `timeout` ms.\n * Create an instance using `timer = new ProgressTimeout(10000, onTimeout)`\n * Call `timer.progress()` to signal that there has been progress of any kind.\n * Call `timer.done()` when the upload has completed.\n */\nclass ProgressTimeout {\n  constructor(timeout, timeoutHandler) {\n    Object.defineProperty(this, _aliveTimer, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _isDone, {\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, _onTimedOut, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _timeout, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldLooseBase(this, _timeout)[_timeout] = timeout;\n    _classPrivateFieldLooseBase(this, _onTimedOut)[_onTimedOut] = timeoutHandler;\n  }\n  progress() {\n    // Some browsers fire another progress event when the upload is\n    // cancelled, so we have to ignore progress after the timer was\n    // told to stop.\n    if (_classPrivateFieldLooseBase(this, _isDone)[_isDone]) return;\n    if (_classPrivateFieldLooseBase(this, _timeout)[_timeout] > 0) {\n      clearTimeout(_classPrivateFieldLooseBase(this, _aliveTimer)[_aliveTimer]);\n      _classPrivateFieldLooseBase(this, _aliveTimer)[_aliveTimer] = setTimeout(_classPrivateFieldLooseBase(this, _onTimedOut)[_onTimedOut], _classPrivateFieldLooseBase(this, _timeout)[_timeout]);\n    }\n  }\n  done() {\n    if (!_classPrivateFieldLooseBase(this, _isDone)[_isDone]) {\n      clearTimeout(_classPrivateFieldLooseBase(this, _aliveTimer)[_aliveTimer]);\n      _classPrivateFieldLooseBase(this, _aliveTimer)[_aliveTimer] = undefined;\n      _classPrivateFieldLooseBase(this, _isDone)[_isDone] = true;\n    }\n  }\n}\nexport default ProgressTimeout;", "function _classPrivateFieldLooseBase(receiver, privateKey) { if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) { throw new TypeError(\"attempted to use private field on non-instance\"); } return receiver; }\nvar id = 0;\nfunction _classPrivateFieldLooseKey(name) { return \"__private_\" + id++ + \"_\" + name; }\nfunction createCancelError(cause) {\n  return new Error('Cancelled', {\n    cause\n  });\n}\nfunction abortOn(signal) {\n  if (signal != null) {\n    var _this$then;\n    const abortPromise = () => this.abort(signal.reason);\n    signal.addEventListener('abort', abortPromise, {\n      once: true\n    });\n    const removeAbortListener = () => {\n      signal.removeEventListener('abort', abortPromise);\n    };\n    (_this$then = this.then) == null ? void 0 : _this$then.call(this, removeAbortListener, removeAbortListener);\n  }\n  return this;\n}\nvar _activeRequests = /*#__PURE__*/_classPrivateFieldLooseKey(\"activeRequests\");\nvar _queuedHandlers = /*#__PURE__*/_classPrivateFieldLooseKey(\"queuedHandlers\");\nvar _paused = /*#__PURE__*/_classPrivateFieldLooseKey(\"paused\");\nvar _pauseTimer = /*#__PURE__*/_classPrivateFieldLooseKey(\"pauseTimer\");\nvar _downLimit = /*#__PURE__*/_classPrivateFieldLooseKey(\"downLimit\");\nvar _upperLimit = /*#__PURE__*/_classPrivateFieldLooseKey(\"upperLimit\");\nvar _rateLimitingTimer = /*#__PURE__*/_classPrivateFieldLooseKey(\"rateLimitingTimer\");\nvar _call = /*#__PURE__*/_classPrivateFieldLooseKey(\"call\");\nvar _queueNext = /*#__PURE__*/_classPrivateFieldLooseKey(\"queueNext\");\nvar _next = /*#__PURE__*/_classPrivateFieldLooseKey(\"next\");\nvar _queue = /*#__PURE__*/_classPrivateFieldLooseKey(\"queue\");\nvar _dequeue = /*#__PURE__*/_classPrivateFieldLooseKey(\"dequeue\");\nvar _resume = /*#__PURE__*/_classPrivateFieldLooseKey(\"resume\");\nvar _increaseLimit = /*#__PURE__*/_classPrivateFieldLooseKey(\"increaseLimit\");\nexport class RateLimitedQueue {\n  constructor(limit) {\n    Object.defineProperty(this, _dequeue, {\n      value: _dequeue2\n    });\n    Object.defineProperty(this, _queue, {\n      value: _queue2\n    });\n    Object.defineProperty(this, _next, {\n      value: _next2\n    });\n    Object.defineProperty(this, _queueNext, {\n      value: _queueNext2\n    });\n    Object.defineProperty(this, _call, {\n      value: _call2\n    });\n    Object.defineProperty(this, _activeRequests, {\n      writable: true,\n      value: 0\n    });\n    Object.defineProperty(this, _queuedHandlers, {\n      writable: true,\n      value: []\n    });\n    Object.defineProperty(this, _paused, {\n      writable: true,\n      value: false\n    });\n    Object.defineProperty(this, _pauseTimer, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _downLimit, {\n      writable: true,\n      value: 1\n    });\n    Object.defineProperty(this, _upperLimit, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _rateLimitingTimer, {\n      writable: true,\n      value: void 0\n    });\n    Object.defineProperty(this, _resume, {\n      writable: true,\n      value: () => this.resume()\n    });\n    Object.defineProperty(this, _increaseLimit, {\n      writable: true,\n      value: () => {\n        if (_classPrivateFieldLooseBase(this, _paused)[_paused]) {\n          _classPrivateFieldLooseBase(this, _rateLimitingTimer)[_rateLimitingTimer] = setTimeout(_classPrivateFieldLooseBase(this, _increaseLimit)[_increaseLimit], 0);\n          return;\n        }\n        _classPrivateFieldLooseBase(this, _downLimit)[_downLimit] = this.limit;\n        this.limit = Math.ceil((_classPrivateFieldLooseBase(this, _upperLimit)[_upperLimit] + _classPrivateFieldLooseBase(this, _downLimit)[_downLimit]) / 2);\n        for (let i = _classPrivateFieldLooseBase(this, _downLimit)[_downLimit]; i <= this.limit; i++) {\n          _classPrivateFieldLooseBase(this, _queueNext)[_queueNext]();\n        }\n        if (_classPrivateFieldLooseBase(this, _upperLimit)[_upperLimit] - _classPrivateFieldLooseBase(this, _downLimit)[_downLimit] > 3) {\n          _classPrivateFieldLooseBase(this, _rateLimitingTimer)[_rateLimitingTimer] = setTimeout(_classPrivateFieldLooseBase(this, _increaseLimit)[_increaseLimit], 2000);\n        } else {\n          _classPrivateFieldLooseBase(this, _downLimit)[_downLimit] = Math.floor(_classPrivateFieldLooseBase(this, _downLimit)[_downLimit] / 2);\n        }\n      }\n    });\n    if (typeof limit !== 'number' || limit === 0) {\n      this.limit = Infinity;\n    } else {\n      this.limit = limit;\n    }\n  }\n  run(fn, queueOptions) {\n    if (!_classPrivateFieldLooseBase(this, _paused)[_paused] && _classPrivateFieldLooseBase(this, _activeRequests)[_activeRequests] < this.limit) {\n      return _classPrivateFieldLooseBase(this, _call)[_call](fn);\n    }\n    return _classPrivateFieldLooseBase(this, _queue)[_queue](fn, queueOptions);\n  }\n  wrapSyncFunction(fn, queueOptions) {\n    var _this = this;\n    return function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      const queuedRequest = _this.run(() => {\n        fn(...args);\n        queueMicrotask(() => queuedRequest.done());\n        return () => {};\n      }, queueOptions);\n      return {\n        abortOn,\n        abort() {\n          queuedRequest.abort();\n        }\n      };\n    };\n  }\n  wrapPromiseFunction(fn, queueOptions) {\n    var _this2 = this;\n    return function () {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      let queuedRequest;\n      const outerPromise = new Promise((resolve, reject) => {\n        queuedRequest = _this2.run(() => {\n          let cancelError;\n          let innerPromise;\n          try {\n            innerPromise = Promise.resolve(fn(...args));\n          } catch (err) {\n            innerPromise = Promise.reject(err);\n          }\n          innerPromise.then(result => {\n            if (cancelError) {\n              reject(cancelError);\n            } else {\n              queuedRequest.done();\n              resolve(result);\n            }\n          }, err => {\n            if (cancelError) {\n              reject(cancelError);\n            } else {\n              queuedRequest.done();\n              reject(err);\n            }\n          });\n          return cause => {\n            cancelError = createCancelError(cause);\n          };\n        }, queueOptions);\n      });\n      outerPromise.abort = cause => {\n        queuedRequest.abort(cause);\n      };\n      outerPromise.abortOn = abortOn;\n      return outerPromise;\n    };\n  }\n  resume() {\n    _classPrivateFieldLooseBase(this, _paused)[_paused] = false;\n    clearTimeout(_classPrivateFieldLooseBase(this, _pauseTimer)[_pauseTimer]);\n    for (let i = 0; i < this.limit; i++) {\n      _classPrivateFieldLooseBase(this, _queueNext)[_queueNext]();\n    }\n  }\n  /**\n   * Freezes the queue for a while or indefinitely.\n   *\n   * @param {number | null } [duration] Duration for the pause to happen, in milliseconds.\n   *                                    If omitted, the queue won't resume automatically.\n   */\n  pause(duration) {\n    if (duration === void 0) {\n      duration = null;\n    }\n    _classPrivateFieldLooseBase(this, _paused)[_paused] = true;\n    clearTimeout(_classPrivateFieldLooseBase(this, _pauseTimer)[_pauseTimer]);\n    if (duration != null) {\n      _classPrivateFieldLooseBase(this, _pauseTimer)[_pauseTimer] = setTimeout(_classPrivateFieldLooseBase(this, _resume)[_resume], duration);\n    }\n  }\n\n  /**\n   * Pauses the queue for a duration, and lower the limit of concurrent requests\n   * when the queue resumes. When the queue resumes, it tries to progressively\n   * increase the limit in `this.#increaseLimit` until another call is made to\n   * `this.rateLimit`.\n   * Call this function when using the RateLimitedQueue for network requests and\n   * the remote server responds with 429 HTTP code.\n   *\n   * @param {number} duration in milliseconds.\n   */\n  rateLimit(duration) {\n    clearTimeout(_classPrivateFieldLooseBase(this, _rateLimitingTimer)[_rateLimitingTimer]);\n    this.pause(duration);\n    if (this.limit > 1 && Number.isFinite(this.limit)) {\n      _classPrivateFieldLooseBase(this, _upperLimit)[_upperLimit] = this.limit - 1;\n      this.limit = _classPrivateFieldLooseBase(this, _downLimit)[_downLimit];\n      _classPrivateFieldLooseBase(this, _rateLimitingTimer)[_rateLimitingTimer] = setTimeout(_classPrivateFieldLooseBase(this, _increaseLimit)[_increaseLimit], duration);\n    }\n  }\n  get isPaused() {\n    return _classPrivateFieldLooseBase(this, _paused)[_paused];\n  }\n}\nfunction _call2(fn) {\n  _classPrivateFieldLooseBase(this, _activeRequests)[_activeRequests] += 1;\n  let done = false;\n  let cancelActive;\n  try {\n    cancelActive = fn();\n  } catch (err) {\n    _classPrivateFieldLooseBase(this, _activeRequests)[_activeRequests] -= 1;\n    throw err;\n  }\n  return {\n    abort: cause => {\n      if (done) return;\n      done = true;\n      _classPrivateFieldLooseBase(this, _activeRequests)[_activeRequests] -= 1;\n      cancelActive == null ? void 0 : cancelActive(cause);\n      _classPrivateFieldLooseBase(this, _queueNext)[_queueNext]();\n    },\n    done: () => {\n      if (done) return;\n      done = true;\n      _classPrivateFieldLooseBase(this, _activeRequests)[_activeRequests] -= 1;\n      _classPrivateFieldLooseBase(this, _queueNext)[_queueNext]();\n    }\n  };\n}\nfunction _queueNext2() {\n  // Do it soon but not immediately, this allows clearing out the entire queue synchronously\n  // one by one without continuously _advancing_ it (and starting new tasks before immediately\n  // aborting them)\n  queueMicrotask(() => _classPrivateFieldLooseBase(this, _next)[_next]());\n}\nfunction _next2() {\n  if (_classPrivateFieldLooseBase(this, _paused)[_paused] || _classPrivateFieldLooseBase(this, _activeRequests)[_activeRequests] >= this.limit) {\n    return;\n  }\n  if (_classPrivateFieldLooseBase(this, _queuedHandlers)[_queuedHandlers].length === 0) {\n    return;\n  }\n\n  // Dispatch the next request, and update the abort/done handlers\n  // so that cancelling it does the Right Thing (and doesn't just try\n  // to dequeue an already-running request).\n  const next = _classPrivateFieldLooseBase(this, _queuedHandlers)[_queuedHandlers].shift();\n  const handler = _classPrivateFieldLooseBase(this, _call)[_call](next.fn);\n  next.abort = handler.abort;\n  next.done = handler.done;\n}\nfunction _queue2(fn, options) {\n  if (options === void 0) {\n    options = {};\n  }\n  const handler = {\n    fn,\n    priority: options.priority || 0,\n    abort: () => {\n      _classPrivateFieldLooseBase(this, _dequeue)[_dequeue](handler);\n    },\n    done: () => {\n      throw new Error('Cannot mark a queued request as done: this indicates a bug');\n    }\n  };\n  const index = _classPrivateFieldLooseBase(this, _queuedHandlers)[_queuedHandlers].findIndex(other => {\n    return handler.priority > other.priority;\n  });\n  if (index === -1) {\n    _classPrivateFieldLooseBase(this, _queuedHandlers)[_queuedHandlers].push(handler);\n  } else {\n    _classPrivateFieldLooseBase(this, _queuedHandlers)[_queuedHandlers].splice(index, 0, handler);\n  }\n  return handler;\n}\nfunction _dequeue2(handler) {\n  const index = _classPrivateFieldLooseBase(this, _queuedHandlers)[_queuedHandlers].indexOf(handler);\n  if (index !== -1) {\n    _classPrivateFieldLooseBase(this, _queuedHandlers)[_queuedHandlers].splice(index, 1);\n  }\n}\nexport const internalRateLimitedQueue = Symbol('__queue');", "class NetworkError extends Error {\n  constructor(error, xhr) {\n    if (xhr === void 0) {\n      xhr = null;\n    }\n    super(`This looks like a network error, the endpoint might be blocked by an internet provider or a firewall.`);\n    this.cause = error;\n    this.isNetworkError = true;\n    this.request = xhr;\n  }\n}\nexport default NetworkError;", "function isNetworkError(xhr) {\n  if (!xhr) {\n    return false;\n  }\n  return xhr.readyState !== 0 && xhr.readyState !== 4 || xhr.status === 0;\n}\nexport default isNetworkError;", "export function filterNonFailedFiles(files) {\n  const hasError = file => 'error' in file && !!file.error;\n  return files.filter(file => !hasError(file));\n}\n\n// Don't double-emit upload-started for Golden Retriever-restored files that were already started\nexport function filterFilesToEmitUploadStarted(files) {\n  return files.filter(file => {\n    var _file$progress;\n    return !((_file$progress = file.progress) != null && _file$progress.uploadStarted) || !file.isRestored;\n  });\n}", "export default {\n  strings: {\n    // Shown in the Informer if an upload is being canceled because it stalled for too long.\n    uploadStalled: 'Upload has not made any progress for %{seconds} seconds. You may want to retry it.'\n  }\n};", "function _classPrivateFieldLooseBase(receiver, privateKey) { if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) { throw new TypeError(\"attempted to use private field on non-instance\"); } return receiver; }\nvar id = 0;\nfunction _classPrivateFieldLooseKey(name) { return \"__private_\" + id++ + \"_\" + name; }\nimport BasePlugin from '@uppy/core/lib/BasePlugin.js';\nimport { nanoid } from 'nanoid/non-secure';\nimport EventManager from '@uppy/utils/lib/EventManager';\nimport ProgressTimeout from '@uppy/utils/lib/ProgressTimeout';\nimport { RateLimitedQueue, internalRateLimitedQueue } from '@uppy/utils/lib/RateLimitedQueue';\nimport NetworkError from '@uppy/utils/lib/NetworkError';\nimport isNetworkError from '@uppy/utils/lib/isNetworkError';\nimport { filterNonFailedFiles, filterFilesToEmitUploadStarted } from '@uppy/utils/lib/fileFilters';\nconst packageJson = {\n  \"version\": \"3.6.0\"\n};\nimport locale from './locale.js';\nfunction buildResponseError(xhr, err) {\n  let error = err;\n  // No error message\n  if (!error) error = new Error('Upload error');\n  // Got an error message string\n  if (typeof error === 'string') error = new Error(error);\n  // Got something else\n  if (!(error instanceof Error)) {\n    error = Object.assign(new Error('Upload error'), {\n      data: error\n    });\n  }\n  if (isNetworkError(xhr)) {\n    error = new NetworkError(error, xhr);\n    return error;\n  }\n  error.request = xhr;\n  return error;\n}\n\n/**\n * Set `data.type` in the blob to `file.meta.type`,\n * because we might have detected a more accurate file type in Uppy\n * https://stackoverflow.com/a/50875615\n *\n * @param {object} file File object with `data`, `size` and `meta` properties\n * @returns {object} blob updated with the new `type` set from `file.meta.type`\n */\nfunction setTypeInBlob(file) {\n  const dataWithUpdatedType = file.data.slice(0, file.data.size, file.meta.type);\n  return dataWithUpdatedType;\n}\nvar _uploadLocalFile = /*#__PURE__*/_classPrivateFieldLooseKey(\"uploadLocalFile\");\nvar _uploadBundle = /*#__PURE__*/_classPrivateFieldLooseKey(\"uploadBundle\");\nvar _getCompanionClientArgs = /*#__PURE__*/_classPrivateFieldLooseKey(\"getCompanionClientArgs\");\nvar _uploadFiles = /*#__PURE__*/_classPrivateFieldLooseKey(\"uploadFiles\");\nvar _handleUpload = /*#__PURE__*/_classPrivateFieldLooseKey(\"handleUpload\");\nexport default class XHRUpload extends BasePlugin {\n  constructor(uppy, _opts) {\n    super(uppy, _opts);\n    Object.defineProperty(this, _uploadFiles, {\n      value: _uploadFiles2\n    });\n    Object.defineProperty(this, _getCompanionClientArgs, {\n      value: _getCompanionClientArgs2\n    });\n    Object.defineProperty(this, _uploadBundle, {\n      value: _uploadBundle2\n    });\n    Object.defineProperty(this, _uploadLocalFile, {\n      value: _uploadLocalFile2\n    });\n    Object.defineProperty(this, _handleUpload, {\n      writable: true,\n      value: async fileIDs => {\n        if (fileIDs.length === 0) {\n          this.uppy.log('[XHRUpload] No files to upload!');\n          return;\n        }\n\n        // No limit configured by the user, and no RateLimitedQueue passed in by a \"parent\" plugin\n        // (basically just AwsS3) using the internal symbol\n        if (this.opts.limit === 0 && !this.opts[internalRateLimitedQueue]) {\n          this.uppy.log('[XHRUpload] When uploading multiple files at once, consider setting the `limit` option (to `10` for example), to limit the number of concurrent uploads, which helps prevent memory and network issues: https://uppy.io/docs/xhr-upload/#limit-0', 'warning');\n        }\n        this.uppy.log('[XHRUpload] Uploading...');\n        const files = this.uppy.getFilesByIds(fileIDs);\n        const filesFiltered = filterNonFailedFiles(files);\n        const filesToEmit = filterFilesToEmitUploadStarted(filesFiltered);\n        this.uppy.emit('upload-start', filesToEmit);\n        if (this.opts.bundle) {\n          // if bundle: true, we don’t support remote uploads\n          const isSomeFileRemote = filesFiltered.some(file => file.isRemote);\n          if (isSomeFileRemote) {\n            throw new Error('Can’t upload remote files when the `bundle: true` option is set');\n          }\n          if (typeof this.opts.headers === 'function') {\n            throw new TypeError('`headers` may not be a function when the `bundle: true` option is set');\n          }\n          await _classPrivateFieldLooseBase(this, _uploadBundle)[_uploadBundle](filesFiltered);\n        } else {\n          await _classPrivateFieldLooseBase(this, _uploadFiles)[_uploadFiles](filesFiltered);\n        }\n      }\n    });\n    this.type = 'uploader';\n    this.id = this.opts.id || 'XHRUpload';\n    this.title = 'XHRUpload';\n    this.defaultLocale = locale;\n\n    // Default options\n    const defaultOptions = {\n      formData: true,\n      fieldName: _opts.bundle ? 'files[]' : 'file',\n      method: 'post',\n      allowedMetaFields: null,\n      responseUrlFieldName: 'url',\n      bundle: false,\n      headers: {},\n      timeout: 30 * 1000,\n      limit: 5,\n      withCredentials: false,\n      responseType: '',\n      /**\n       * @param {string} responseText the response body string\n       */\n      getResponseData(responseText) {\n        let parsedResponse = {};\n        try {\n          parsedResponse = JSON.parse(responseText);\n        } catch (err) {\n          uppy.log(err);\n        }\n        return parsedResponse;\n      },\n      /**\n       *\n       * @param {string} _ the response body string\n       * @param {XMLHttpRequest | respObj} response the response object (XHR or similar)\n       */\n      getResponseError(_, response) {\n        let error = new Error('Upload error');\n        if (isNetworkError(response)) {\n          error = new NetworkError(error, response);\n        }\n        return error;\n      },\n      /**\n       * Check if the response from the upload endpoint indicates that the upload was successful.\n       *\n       * @param {number} status the response status code\n       */\n      validateStatus(status) {\n        return status >= 200 && status < 300;\n      }\n    };\n    this.opts = {\n      ...defaultOptions,\n      ..._opts\n    };\n    this.i18nInit();\n\n    // Simultaneous upload limiting is shared across all uploads with this plugin.\n    if (internalRateLimitedQueue in this.opts) {\n      this.requests = this.opts[internalRateLimitedQueue];\n    } else {\n      this.requests = new RateLimitedQueue(this.opts.limit);\n    }\n    if (this.opts.bundle && !this.opts.formData) {\n      throw new Error('`opts.formData` must be true when `opts.bundle` is enabled.');\n    }\n    if ((_opts == null ? void 0 : _opts.allowedMetaFields) === undefined && 'metaFields' in this.opts) {\n      throw new Error('The `metaFields` option has been renamed to `allowedMetaFields`.');\n    }\n    this.uploaderEvents = Object.create(null);\n  }\n  getOptions(file) {\n    const overrides = this.uppy.getState().xhrUpload;\n    const {\n      headers\n    } = this.opts;\n    const opts = {\n      ...this.opts,\n      ...(overrides || {}),\n      ...(file.xhrUpload || {}),\n      headers: {}\n    };\n    // Support for `headers` as a function, only in the XHRUpload settings.\n    // Options set by other plugins in Uppy state or on the files themselves are still merged in afterward.\n    //\n    // ```js\n    // headers: (file) => ({ expires: file.meta.expires })\n    // ```\n    if (typeof headers === 'function') {\n      opts.headers = headers(file);\n    } else {\n      Object.assign(opts.headers, this.opts.headers);\n    }\n    if (overrides) {\n      Object.assign(opts.headers, overrides.headers);\n    }\n    if (file.xhrUpload) {\n      Object.assign(opts.headers, file.xhrUpload.headers);\n    }\n    return opts;\n  }\n\n  // eslint-disable-next-line class-methods-use-this\n  addMetadata(formData, meta, opts) {\n    const allowedMetaFields = Array.isArray(opts.allowedMetaFields) ? opts.allowedMetaFields : Object.keys(meta); // Send along all fields by default.\n\n    allowedMetaFields.forEach(item => {\n      if (Array.isArray(meta[item])) {\n        // In this case we don't transform `item` to add brackets, it's up to\n        // the user to add the brackets so it won't be overridden.\n        meta[item].forEach(subItem => formData.append(item, subItem));\n      } else {\n        formData.append(item, meta[item]);\n      }\n    });\n  }\n  createFormDataUpload(file, opts) {\n    const formPost = new FormData();\n    this.addMetadata(formPost, file.meta, opts);\n    const dataWithUpdatedType = setTypeInBlob(file);\n    if (file.name) {\n      formPost.append(opts.fieldName, dataWithUpdatedType, file.meta.name);\n    } else {\n      formPost.append(opts.fieldName, dataWithUpdatedType);\n    }\n    return formPost;\n  }\n  createBundledUpload(files, opts) {\n    const formPost = new FormData();\n    const {\n      meta\n    } = this.uppy.getState();\n    this.addMetadata(formPost, meta, opts);\n    files.forEach(file => {\n      const options = this.getOptions(file);\n      const dataWithUpdatedType = setTypeInBlob(file);\n      if (file.name) {\n        formPost.append(options.fieldName, dataWithUpdatedType, file.name);\n      } else {\n        formPost.append(options.fieldName, dataWithUpdatedType);\n      }\n    });\n    return formPost;\n  }\n  install() {\n    if (this.opts.bundle) {\n      const {\n        capabilities\n      } = this.uppy.getState();\n      this.uppy.setState({\n        capabilities: {\n          ...capabilities,\n          individualCancellation: false\n        }\n      });\n    }\n    this.uppy.addUploader(_classPrivateFieldLooseBase(this, _handleUpload)[_handleUpload]);\n  }\n  uninstall() {\n    if (this.opts.bundle) {\n      const {\n        capabilities\n      } = this.uppy.getState();\n      this.uppy.setState({\n        capabilities: {\n          ...capabilities,\n          individualCancellation: true\n        }\n      });\n    }\n    this.uppy.removeUploader(_classPrivateFieldLooseBase(this, _handleUpload)[_handleUpload]);\n  }\n}\nasync function _uploadLocalFile2(file, current, total) {\n  const opts = this.getOptions(file);\n  this.uppy.log(`uploading ${current} of ${total}`);\n  return new Promise((resolve, reject) => {\n    const data = opts.formData ? this.createFormDataUpload(file, opts) : file.data;\n    const xhr = new XMLHttpRequest();\n    const eventManager = new EventManager(this.uppy);\n    this.uploaderEvents[file.id] = eventManager;\n    let queuedRequest;\n    const timer = new ProgressTimeout(opts.timeout, () => {\n      const error = new Error(this.i18n('uploadStalled', {\n        seconds: Math.ceil(opts.timeout / 1000)\n      }));\n      this.uppy.emit('upload-stalled', error, [file]);\n    });\n    const id = nanoid();\n    xhr.upload.addEventListener('loadstart', () => {\n      this.uppy.log(`[XHRUpload] ${id} started`);\n    });\n    xhr.upload.addEventListener('progress', ev => {\n      this.uppy.log(`[XHRUpload] ${id} progress: ${ev.loaded} / ${ev.total}`);\n      // Begin checking for timeouts when progress starts, instead of loading,\n      // to avoid timing out requests on browser concurrency queue\n      timer.progress();\n      if (ev.lengthComputable) {\n        this.uppy.emit('upload-progress', file, {\n          uploader: this,\n          bytesUploaded: ev.loaded,\n          bytesTotal: ev.total\n        });\n      }\n    });\n    xhr.addEventListener('load', () => {\n      this.uppy.log(`[XHRUpload] ${id} finished`);\n      timer.done();\n      queuedRequest.done();\n      if (this.uploaderEvents[file.id]) {\n        this.uploaderEvents[file.id].remove();\n        this.uploaderEvents[file.id] = null;\n      }\n      if (opts.validateStatus(xhr.status, xhr.responseText, xhr)) {\n        const body = opts.getResponseData(xhr.responseText, xhr);\n        const uploadURL = body[opts.responseUrlFieldName];\n        const uploadResp = {\n          status: xhr.status,\n          body,\n          uploadURL\n        };\n        this.uppy.emit('upload-success', file, uploadResp);\n        if (uploadURL) {\n          this.uppy.log(`Download ${file.name} from ${uploadURL}`);\n        }\n        return resolve(file);\n      }\n      const body = opts.getResponseData(xhr.responseText, xhr);\n      const error = buildResponseError(xhr, opts.getResponseError(xhr.responseText, xhr));\n      const response = {\n        status: xhr.status,\n        body\n      };\n      this.uppy.emit('upload-error', file, error, response);\n      return reject(error);\n    });\n    xhr.addEventListener('error', () => {\n      this.uppy.log(`[XHRUpload] ${id} errored`);\n      timer.done();\n      queuedRequest.done();\n      if (this.uploaderEvents[file.id]) {\n        this.uploaderEvents[file.id].remove();\n        this.uploaderEvents[file.id] = null;\n      }\n      const error = buildResponseError(xhr, opts.getResponseError(xhr.responseText, xhr));\n      this.uppy.emit('upload-error', file, error);\n      return reject(error);\n    });\n    xhr.open(opts.method.toUpperCase(), opts.endpoint, true);\n    // IE10 does not allow setting `withCredentials` and `responseType`\n    // before `open()` is called.\n    xhr.withCredentials = opts.withCredentials;\n    if (opts.responseType !== '') {\n      xhr.responseType = opts.responseType;\n    }\n    queuedRequest = this.requests.run(() => {\n      // When using an authentication system like JWT, the bearer token goes as a header. This\n      // header needs to be fresh each time the token is refreshed so computing and setting the\n      // headers just before the upload starts enables this kind of authentication to work properly.\n      // Otherwise, half-way through the list of uploads the token could be stale and the upload would fail.\n      const currentOpts = this.getOptions(file);\n      Object.keys(currentOpts.headers).forEach(header => {\n        xhr.setRequestHeader(header, currentOpts.headers[header]);\n      });\n      xhr.send(data);\n      return () => {\n        timer.done();\n        xhr.abort();\n      };\n    });\n    eventManager.onFileRemove(file.id, () => {\n      queuedRequest.abort();\n      reject(new Error('File removed'));\n    });\n    eventManager.onCancelAll(file.id, _ref => {\n      let {\n        reason\n      } = _ref;\n      if (reason === 'user') {\n        queuedRequest.abort();\n      }\n      reject(new Error('Upload cancelled'));\n    });\n  });\n}\nfunction _uploadBundle2(files) {\n  return new Promise((resolve, reject) => {\n    const {\n      endpoint\n    } = this.opts;\n    const {\n      method\n    } = this.opts;\n    const optsFromState = this.uppy.getState().xhrUpload;\n    const formData = this.createBundledUpload(files, {\n      ...this.opts,\n      ...(optsFromState || {})\n    });\n    const xhr = new XMLHttpRequest();\n    const emitError = error => {\n      files.forEach(file => {\n        this.uppy.emit('upload-error', file, error);\n      });\n    };\n    const timer = new ProgressTimeout(this.opts.timeout, () => {\n      const error = new Error(this.i18n('uploadStalled', {\n        seconds: Math.ceil(this.opts.timeout / 1000)\n      }));\n      this.uppy.emit('upload-stalled', error, files);\n    });\n    xhr.upload.addEventListener('loadstart', () => {\n      this.uppy.log('[XHRUpload] started uploading bundle');\n      timer.progress();\n    });\n    xhr.upload.addEventListener('progress', ev => {\n      timer.progress();\n      if (!ev.lengthComputable) return;\n      files.forEach(file => {\n        this.uppy.emit('upload-progress', file, {\n          uploader: this,\n          bytesUploaded: ev.loaded / ev.total * file.size,\n          bytesTotal: file.size\n        });\n      });\n    });\n    xhr.addEventListener('load', ev => {\n      timer.done();\n      if (this.opts.validateStatus(ev.target.status, xhr.responseText, xhr)) {\n        const body = this.opts.getResponseData(xhr.responseText, xhr);\n        const uploadResp = {\n          status: ev.target.status,\n          body\n        };\n        files.forEach(file => {\n          this.uppy.emit('upload-success', file, uploadResp);\n        });\n        return resolve();\n      }\n      const error = this.opts.getResponseError(xhr.responseText, xhr) || new Error('Upload error');\n      error.request = xhr;\n      emitError(error);\n      return reject(error);\n    });\n    xhr.addEventListener('error', () => {\n      timer.done();\n      const error = this.opts.getResponseError(xhr.responseText, xhr) || new Error('Upload error');\n      emitError(error);\n      return reject(error);\n    });\n    this.uppy.on('cancel-all', function (_temp) {\n      let {\n        reason\n      } = _temp === void 0 ? {} : _temp;\n      if (reason !== 'user') return;\n      timer.done();\n      xhr.abort();\n    });\n    xhr.open(method.toUpperCase(), endpoint, true);\n    // IE10 does not allow setting `withCredentials` and `responseType`\n    // before `open()` is called.\n    xhr.withCredentials = this.opts.withCredentials;\n    if (this.opts.responseType !== '') {\n      xhr.responseType = this.opts.responseType;\n    }\n    Object.keys(this.opts.headers).forEach(header => {\n      xhr.setRequestHeader(header, this.opts.headers[header]);\n    });\n    xhr.send(formData);\n  });\n}\nfunction _getCompanionClientArgs2(file) {\n  const opts = this.getOptions(file);\n  const allowedMetaFields = Array.isArray(opts.allowedMetaFields) ? opts.allowedMetaFields\n  // Send along all fields by default.\n  : Object.keys(file.meta);\n  return {\n    ...file.remote.body,\n    protocol: 'multipart',\n    endpoint: opts.endpoint,\n    size: file.data.size,\n    fieldname: opts.fieldName,\n    metadata: Object.fromEntries(allowedMetaFields.map(name => [name, file.meta[name]])),\n    httpMethod: opts.method,\n    useFormData: opts.formData,\n    headers: opts.headers\n  };\n}\nasync function _uploadFiles2(files) {\n  await Promise.allSettled(files.map((file, i) => {\n    const current = parseInt(i, 10) + 1;\n    const total = files.length;\n    if (file.isRemote) {\n      const getQueue = () => this.requests;\n      const controller = new AbortController();\n      const removedHandler = removedFile => {\n        if (removedFile.id === file.id) controller.abort();\n      };\n      this.uppy.on('file-removed', removedHandler);\n      const uploadPromise = this.uppy.getRequestClientForFile(file).uploadRemoteFile(file, _classPrivateFieldLooseBase(this, _getCompanionClientArgs)[_getCompanionClientArgs](file), {\n        signal: controller.signal,\n        getQueue\n      });\n      this.requests.wrapSyncFunction(() => {\n        this.uppy.off('file-removed', removedHandler);\n      }, {\n        priority: -1\n      })();\n      return uploadPromise;\n    }\n    return _classPrivateFieldLooseBase(this, _uploadLocalFile)[_uploadLocalFile](file, current, total);\n  }));\n}\n// eslint-disable-next-line global-require\nXHRUpload.VERSION = packageJson.version;"],
  "mappings": "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",
  "names": ["id", "_classPrivateFieldLooseBase", "id", "_classPrivateFieldLooseKey", "_classPrivateFieldLooseBase", "id", "_classPrivateFieldLooseKey", "_classPrivateFieldLooseBase", "id", "_classPrivateFieldLooseKey", "body"]
}
