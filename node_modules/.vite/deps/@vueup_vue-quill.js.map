{
  "version": 3,
  "sources": ["../../@vueup/vue-quill/dist/vue-quill.esm-bundler.js"],
  "sourcesContent": ["/*!\n * VueQuill @vueup/vue-quill v1.2.0\n * https://vueup.github.io/vue-quill/\n * \n * Includes quill v1.3.7\n * https://quilljs.com/\n * \n * Copyright (c) 2023 Ahmad Luthfi Masruri\n * Released under the MIT license\n * Date: 2023-05-12T08:44:03.742Z\n */\nimport Quill from 'quill';\nexport { default as Quill } from 'quill';\nimport Delta from 'quill-delta';\nexport { default as Delta } from 'quill-delta';\nimport { defineComponent, onMounted, onBeforeUnmount, ref, watch, nextTick, h } from 'vue';\n\nconst toolbarOptions = {\r\n    essential: [\r\n        [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n        ['bold', 'italic', 'underline'],\r\n        [{ list: 'ordered' }, { list: 'bullet' }, { align: [] }],\r\n        ['blockquote', 'code-block', 'link'],\r\n        [{ color: [] }, 'clean'],\r\n    ],\r\n    minimal: [\r\n        [{ header: 1 }, { header: 2 }],\r\n        ['bold', 'italic', 'underline'],\r\n        [{ list: 'ordered' }, { list: 'bullet' }, { align: [] }],\r\n    ],\r\n    full: [\r\n        ['bold', 'italic', 'underline', 'strike'],\r\n        ['blockquote', 'code-block'],\r\n        [{ header: 1 }, { header: 2 }],\r\n        [{ list: 'ordered' }, { list: 'bullet' }],\r\n        [{ script: 'sub' }, { script: 'super' }],\r\n        [{ indent: '-1' }, { indent: '+1' }],\r\n        [{ direction: 'rtl' }],\r\n        [{ size: ['small', false, 'large', 'huge'] }],\r\n        [{ header: [1, 2, 3, 4, 5, 6, false] }],\r\n        [{ color: [] }, { background: [] }],\r\n        [{ font: [] }],\r\n        [{ align: [] }],\r\n        ['link', 'video', 'image'],\r\n        ['clean'], // remove formatting button\r\n    ],\r\n};\n\nconst QuillEditor = defineComponent({\r\n    name: 'QuillEditor',\r\n    inheritAttrs: false,\r\n    props: {\r\n        content: {\r\n            type: [String, Object],\r\n        },\r\n        contentType: {\r\n            type: String,\r\n            default: 'delta',\r\n            validator: (value) => {\r\n                return ['delta', 'html', 'text'].includes(value);\r\n            },\r\n        },\r\n        enable: {\r\n            type: Boolean,\r\n            default: true,\r\n        },\r\n        readOnly: {\r\n            type: Boolean,\r\n            default: false,\r\n        },\r\n        placeholder: {\r\n            type: String,\r\n            required: false,\r\n        },\r\n        theme: {\r\n            type: String,\r\n            default: 'snow',\r\n            validator: (value) => {\r\n                return ['snow', 'bubble', ''].includes(value);\r\n            },\r\n        },\r\n        toolbar: {\r\n            type: [String, Array, Object],\r\n            required: false,\r\n            validator: (value) => {\r\n                if (typeof value === 'string' && value !== '') {\r\n                    return value.charAt(0) === '#'\r\n                        ? true\r\n                        : Object.keys(toolbarOptions).indexOf(value) !== -1;\r\n                }\r\n                return true;\r\n            },\r\n        },\r\n        modules: {\r\n            type: Object,\r\n            required: false,\r\n        },\r\n        options: {\r\n            type: Object,\r\n            required: false,\r\n        },\r\n        globalOptions: {\r\n            type: Object,\r\n            required: false,\r\n        },\r\n    },\r\n    emits: [\r\n        'textChange',\r\n        'selectionChange',\r\n        'editorChange',\r\n        'update:content',\r\n        'focus',\r\n        'blur',\r\n        'ready',\r\n    ],\r\n    setup: (props, ctx) => {\r\n        onMounted(() => {\r\n            initialize();\r\n        });\r\n        onBeforeUnmount(() => {\r\n            quill = null;\r\n        });\r\n        let quill;\r\n        let options;\r\n        const editor = ref();\r\n        // Initialize Quill\r\n        const initialize = () => {\r\n            var _a;\r\n            if (!editor.value)\r\n                return;\r\n            options = composeOptions();\r\n            // Register modules\r\n            if (props.modules) {\r\n                if (Array.isArray(props.modules)) {\r\n                    for (const module of props.modules) {\r\n                        Quill.register(`modules/${module.name}`, module.module);\r\n                    }\r\n                }\r\n                else {\r\n                    Quill.register(`modules/${props.modules.name}`, props.modules.module);\r\n                }\r\n            }\r\n            // Create new Quill instance\r\n            quill = new Quill(editor.value, options);\r\n            // Set editor content\r\n            setContents(props.content);\r\n            // Set event handlers\r\n            quill.on('text-change', handleTextChange);\r\n            quill.on('selection-change', handleSelectionChange);\r\n            quill.on('editor-change', handleEditorChange);\r\n            // Remove editor class when theme changes\r\n            if (props.theme !== 'bubble')\r\n                editor.value.classList.remove('ql-bubble');\r\n            if (props.theme !== 'snow')\r\n                editor.value.classList.remove('ql-snow');\r\n            // Fix clicking the quill toolbar is detected as blur event\r\n            (_a = quill\r\n                .getModule('toolbar')) === null || _a === void 0 ? void 0 : _a.container.addEventListener('mousedown', (e) => {\r\n                e.preventDefault();\r\n            });\r\n            // Emit ready event\r\n            ctx.emit('ready', quill);\r\n        };\r\n        // Compose Options\r\n        const composeOptions = () => {\r\n            const clientOptions = {};\r\n            if (props.theme !== '')\r\n                clientOptions.theme = props.theme;\r\n            if (props.readOnly)\r\n                clientOptions.readOnly = props.readOnly;\r\n            if (props.placeholder)\r\n                clientOptions.placeholder = props.placeholder;\r\n            if (props.toolbar && props.toolbar !== '') {\r\n                clientOptions.modules = {\r\n                    toolbar: (() => {\r\n                        if (typeof props.toolbar === 'object') {\r\n                            return props.toolbar;\r\n                        }\r\n                        else if (typeof props.toolbar === 'string') {\r\n                            const str = props.toolbar;\r\n                            return str.charAt(0) === '#'\r\n                                ? props.toolbar\r\n                                : toolbarOptions[props.toolbar];\r\n                        }\r\n                        return;\r\n                    })(),\r\n                };\r\n            }\r\n            if (props.modules) {\r\n                const modules = (() => {\r\n                    var _a, _b;\r\n                    const modulesOption = {};\r\n                    if (Array.isArray(props.modules)) {\r\n                        for (const module of props.modules) {\r\n                            modulesOption[module.name] = (_a = module.options) !== null && _a !== void 0 ? _a : {};\r\n                        }\r\n                    }\r\n                    else {\r\n                        modulesOption[props.modules.name] = (_b = props.modules.options) !== null && _b !== void 0 ? _b : {};\r\n                    }\r\n                    return modulesOption;\r\n                })();\r\n                clientOptions.modules = Object.assign({}, clientOptions.modules, modules);\r\n            }\r\n            return Object.assign({}, props.globalOptions, props.options, clientOptions);\r\n        };\r\n        const maybeClone = (delta) => {\r\n            return typeof delta === 'object' && delta ? delta.slice() : delta;\r\n        };\r\n        const deltaHasValuesOtherThanRetain = (delta) => {\r\n            return Object.values(delta.ops).some((v) => !v.retain || Object.keys(v).length !== 1);\r\n        };\r\n        // Doesn't need reactivity, but does need to be cloned to avoid deep mutations always registering as equal\r\n        let internalModel;\r\n        const internalModelEquals = (against) => {\r\n            if (typeof internalModel === typeof against) {\r\n                if (against === internalModel) {\r\n                    return true;\r\n                }\r\n                // Ref/Proxy does not support instanceof, so do a loose check\r\n                if (typeof against === 'object' &&\r\n                    against &&\r\n                    typeof internalModel === 'object' &&\r\n                    internalModel) {\r\n                    return !deltaHasValuesOtherThanRetain(internalModel.diff(against));\r\n                }\r\n            }\r\n            return false;\r\n        };\r\n        const handleTextChange = (delta, oldContents, source) => {\r\n            internalModel = maybeClone(getContents());\r\n            // Update v-model:content when text changes\r\n            if (!internalModelEquals(props.content)) {\r\n                ctx.emit('update:content', internalModel);\r\n            }\r\n            ctx.emit('textChange', { delta, oldContents, source });\r\n        };\r\n        const isEditorFocus = ref();\r\n        const handleSelectionChange = (range, oldRange, source) => {\r\n            // Set isEditorFocus if quill.hasFocus()\r\n            isEditorFocus.value = !!(quill === null || quill === void 0 ? void 0 : quill.hasFocus());\r\n            ctx.emit('selectionChange', { range, oldRange, source });\r\n        };\r\n        watch(isEditorFocus, (focus) => {\r\n            if (focus)\r\n                ctx.emit('focus', editor);\r\n            else\r\n                ctx.emit('blur', editor);\r\n        });\r\n        const handleEditorChange = (...args) => {\r\n            if (args[0] === 'text-change')\r\n                ctx.emit('editorChange', {\r\n                    name: args[0],\r\n                    delta: args[1],\r\n                    oldContents: args[2],\r\n                    source: args[3],\r\n                });\r\n            if (args[0] === 'selection-change')\r\n                ctx.emit('editorChange', {\r\n                    name: args[0],\r\n                    range: args[1],\r\n                    oldRange: args[2],\r\n                    source: args[3],\r\n                });\r\n        };\r\n        const getEditor = () => {\r\n            return editor.value;\r\n        };\r\n        const getToolbar = () => {\r\n            var _a;\r\n            return (_a = quill === null || quill === void 0 ? void 0 : quill.getModule('toolbar')) === null || _a === void 0 ? void 0 : _a.container;\r\n        };\r\n        const getQuill = () => {\r\n            if (quill)\r\n                return quill;\r\n            else\r\n                throw `The quill editor hasn't been instantiated yet,\n                  make sure to call this method when the editor ready\n                  or use v-on:ready=\"onReady(quill)\" event instead.`;\r\n        };\r\n        const getContents = (index, length) => {\r\n            if (props.contentType === 'html') {\r\n                return getHTML();\r\n            }\r\n            else if (props.contentType === 'text') {\r\n                return getText(index, length);\r\n            }\r\n            return quill === null || quill === void 0 ? void 0 : quill.getContents(index, length);\r\n        };\r\n        const setContents = (content, source = 'api') => {\r\n            const normalizedContent = !content\r\n                ? props.contentType === 'delta'\r\n                    ? new Delta()\r\n                    : ''\r\n                : content;\r\n            if (props.contentType === 'html') {\r\n                setHTML(normalizedContent);\r\n            }\r\n            else if (props.contentType === 'text') {\r\n                setText(normalizedContent, source);\r\n            }\r\n            else {\r\n                quill === null || quill === void 0 ? void 0 : quill.setContents(normalizedContent, source);\r\n            }\r\n            internalModel = maybeClone(normalizedContent);\r\n        };\r\n        const getText = (index, length) => {\r\n            var _a;\r\n            return (_a = quill === null || quill === void 0 ? void 0 : quill.getText(index, length)) !== null && _a !== void 0 ? _a : '';\r\n        };\r\n        const setText = (text, source = 'api') => {\r\n            quill === null || quill === void 0 ? void 0 : quill.setText(text, source);\r\n        };\r\n        const getHTML = () => {\r\n            var _a;\r\n            return (_a = quill === null || quill === void 0 ? void 0 : quill.root.innerHTML) !== null && _a !== void 0 ? _a : '';\r\n        };\r\n        const setHTML = (html) => {\r\n            if (quill)\r\n                quill.root.innerHTML = html;\r\n        };\r\n        const pasteHTML = (html, source = 'api') => {\r\n            const delta = quill === null || quill === void 0 ? void 0 : quill.clipboard.convert(html);\r\n            if (delta)\r\n                quill === null || quill === void 0 ? void 0 : quill.setContents(delta, source);\r\n        };\r\n        const focus = () => {\r\n            quill === null || quill === void 0 ? void 0 : quill.focus();\r\n        };\r\n        const reinit = () => {\r\n            nextTick(() => {\r\n                var _a;\r\n                if (!ctx.slots.toolbar && quill)\r\n                    (_a = quill.getModule('toolbar')) === null || _a === void 0 ? void 0 : _a.container.remove();\r\n                initialize();\r\n            });\r\n        };\r\n        watch(() => props.content, (newContent) => {\r\n            if (!quill || !newContent || internalModelEquals(newContent))\r\n                return;\r\n            // Restore the selection and cursor position after updating the content\r\n            const selection = quill.getSelection();\r\n            if (selection) {\r\n                nextTick(() => quill === null || quill === void 0 ? void 0 : quill.setSelection(selection));\r\n            }\r\n            setContents(newContent);\r\n        }, { deep: true });\r\n        watch(() => props.enable, (newValue) => {\r\n            if (quill)\r\n                quill.enable(newValue);\r\n        });\r\n        return {\r\n            editor,\r\n            getEditor,\r\n            getToolbar,\r\n            getQuill,\r\n            getContents,\r\n            setContents,\r\n            getHTML,\r\n            setHTML,\r\n            pasteHTML,\r\n            focus,\r\n            getText,\r\n            setText,\r\n            reinit,\r\n        };\r\n    },\r\n    render() {\r\n        var _a, _b;\r\n        return [\r\n            (_b = (_a = this.$slots).toolbar) === null || _b === void 0 ? void 0 : _b.call(_a),\r\n            h('div', { ref: 'editor', ...this.$attrs }),\r\n        ];\r\n    },\r\n});\n\nexport { QuillEditor };\n"],
  "mappings": "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",
  "names": ["import_quill", "import_quill_delta", "Quill", "focus", "Delta"]
}
