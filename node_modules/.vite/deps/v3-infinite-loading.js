import "./chunk-FLSNA7AK.js";
import {
  createBaseVNode,
  createCommentVNode,
  createElementBlock,
  createVNode,
  defineComponent,
  nextTick,
  onMounted,
  onUnmounted,
  openBlock,
  popScopeId,
  pushScopeId,
  ref,
  renderSlot,
  toDisplayString,
  toRefs,
  vShow,
  watch,
  withDirectives
} from "./chunk-DIASZOHW.js";
import "./chunk-WXXH56N5.js";

// node_modules/v3-infinite-loading/lib/v3-infinite-loading.es.js
function D(e, o) {
  const n = e.getBoundingClientRect();
  if (!o)
    return n.top >= 0 && n.bottom <= window.innerHeight;
  const t = o.getBoundingClientRect();
  return n.top >= t.top && n.bottom <= t.bottom;
}
async function q(e) {
  return await nextTick(), e.value instanceof HTMLElement ? e.value : e.value ? document.querySelector(e.value) : null;
}
function y(e) {
  let o = `0px 0px ${e.distance}px 0px`;
  e.top && (o = `${e.distance}px 0px 0px 0px`);
  const n = new IntersectionObserver(
    (t) => {
      t[0].isIntersecting && (e.firstload && e.emit(), e.firstload = true);
    },
    { root: e.parentEl, rootMargin: o }
  );
  return n.observe(e.infiniteLoading.value), n;
}
var x = (e, o) => {
  const n = e.__vccOpts || e;
  for (const [t, c] of o)
    n[t] = c;
  return n;
};
var P = {};
var U = (e) => (pushScopeId("data-v-d3e37633"), e = e(), popScopeId(), e);
var j = { class: "container" };
var z = U(() => createBaseVNode("div", { class: "spinner" }, null, -1));
var A = [
  z
];
function F(e, o) {
  return openBlock(), createElementBlock("div", j, A);
}
var G = x(P, [["render", F], ["__scopeId", "data-v-d3e37633"]]);
var J = { class: "state-error" };
var K = defineComponent({
  __name: "InfiniteLoading",
  props: {
    top: { type: Boolean, default: false },
    target: {},
    distance: { default: 0 },
    identifier: {},
    firstload: { type: Boolean, default: true },
    slots: {}
  },
  emits: ["infinite"],
  setup(e, { emit: o }) {
    const n = e;
    let t = null, c = 0;
    const d = ref(null), r = ref(""), { top: p, firstload: I, distance: S } = n, { identifier: k, target: L } = toRefs(n), i = {
      infiniteLoading: d,
      top: p,
      firstload: I,
      distance: S,
      parentEl: null,
      emit() {
        c = (i.parentEl || document.documentElement).scrollHeight, f.loading(), o("infinite", f);
      }
    }, f = {
      loading() {
        r.value = "loading";
      },
      async loaded() {
        r.value = "loaded";
        const l = i.parentEl || document.documentElement;
        await nextTick(), p && (l.scrollTop = l.scrollHeight - c), D(d.value, i.parentEl) && i.emit();
      },
      complete() {
        r.value = "complete", t == null || t.disconnect();
      },
      error() {
        r.value = "error";
      }
    };
    return watch(k, () => {
      t == null || t.disconnect(), t = y(i);
    }), onMounted(async () => {
      i.parentEl = await q(L), t = y(i);
    }), onUnmounted(() => {
      t == null || t.disconnect();
    }), (l, _) => (openBlock(), createElementBlock("div", {
      ref_key: "infiniteLoading",
      ref: d,
      style: { "min-height": "1px" }
    }, [
      withDirectives(createBaseVNode("div", null, [
        renderSlot(l.$slots, "spinner", {}, () => [
          createVNode(G)
        ], true)
      ], 512), [
        [vShow, r.value == "loading"]
      ]),
      r.value == "complete" ? renderSlot(l.$slots, "complete", { key: 0 }, () => {
        var a;
        return [
          createBaseVNode("span", null, toDisplayString(((a = l.slots) == null ? void 0 : a.complete) || "No more results!"), 1)
        ];
      }, true) : createCommentVNode("", true),
      r.value == "error" ? renderSlot(l.$slots, "error", {
        key: 1,
        retry: i.emit
      }, () => {
        var a;
        return [
          createBaseVNode("span", J, [
            createBaseVNode("span", null, toDisplayString(((a = l.slots) == null ? void 0 : a.error) || "Oops something went wrong!"), 1),
            createBaseVNode("button", {
              class: "retry",
              onClick: _[0] || (_[0] = //@ts-ignore
              (...$) => i.emit && i.emit(...$))
            }, "retry")
          ])
        ];
      }, true) : createCommentVNode("", true)
    ], 512));
  }
});
var W = x(K, [["__scopeId", "data-v-a7077831"]]);
export {
  W as default
};
//# sourceMappingURL=v3-infinite-loading.js.map
